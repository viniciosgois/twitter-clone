generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                         String @id @default(auto()) @map("_id") @db.ObjectId
  name                       String?
  username                   String? @unique
  bio                        String?
  email                      String? @unique
  emailVerified              DateTime?
  image                      String?
  coverImage                 String?
  profileImage               String?
  hashedPassword             String?
  followingIds               String[] @db.ObjectId
  hasNotification            Boolean?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  posts                      Post[]
  comments                   Comment[]
  notifications              Notification[]
}

model Post {
  id                         String @id @default(auto()) @map("_id") @db.ObjectId
  body                       String
  userId                     String @db.ObjectId
  likeIds                    String[] @db.ObjectId
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  comments                   Comment[]

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment {
  id                         String @id @default(auto()) @map("_id") @db.ObjectId
  body                       String 
  userId                     String @db.ObjectId
  postId                     String @db.ObjectId
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification {
  id                         String @id @default(auto()) @map("_id") @db.ObjectId
  body                       String
  userId                     String @db.ObjectId
  createdAt                  DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}